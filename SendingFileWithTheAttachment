package com.fortune4.cms.endpoints;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fortune4.cms.service.ServiceSendMail;

import lombok.AllArgsConstructor;

import jakarta.mail.Authenticator;
import jakarta.mail.Message;
import jakarta.mail.MessagingException;
import jakarta.mail.PasswordAuthentication;
import jakarta.mail.Session;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeBodyPart;
import jakarta.mail.internet.MimeMessage;
import jakarta.mail.internet.MimeMultipart;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.Properties;

@AllArgsConstructor
@RestController
@RequestMapping("/apisendmail")
public class EndpointsSendMail {

	private ServiceSendMail serviceSendMail;
	

	@PostMapping
	public ResponseEntity<?> findAllPermission(@RequestParam("name") MultipartFile multipartFile,
			@RequestParam("message") String strMessage, @RequestParam("To") String strTos) throws IOException {

		while (strTos.startsWith(",")) {
			strTos = strTos.substring(1, strTos.length());
		}

		while (strTos.endsWith(",")) {
			strTos = strTos.substring(0, strTos.length() - 1);
		}

		String[] lstArrayOfReceipts = null;
		if (strTos.contains(",")) {
			lstArrayOfReceipts = strTos.split(",");
			
			while (strTos.startsWith(",")) {
				strTos = strTos.substring(1, strTos.length());
			}

			while (strTos.endsWith(",")) {
				strTos = strTos.substring(0, strTos.length() - 1);
			}
		}

		System.out.println("PIYUSH LIST : = " + Arrays.toString(lstArrayOfReceipts));
		
		Properties prop = new Properties();
		prop.put("mail.smtp.auth", true);
		prop.put("mail.smtp.starttls.enable", "true");
		prop.put("mail.smtp.host", "smtp.gmail.com");
		prop.put("mail.smtp.port", "25");
		prop.put("mail.smtp.ssl.trust", "smtp.gmail.com");

		Session session = Session.getInstance(prop, new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication("singhrajpiyush@gmail.com", "rsjfocjapbxfaudt");
			}
		});

		try {
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("singhrajpiyush@gmail.com"));
			message.setRecipients(Message.RecipientType.TO, InternetAddress.parse("piyushraj.singh@fortune4.in"));
			message.setSubject("Mail Subject");

			String msg = "Roman Lost WWE Undisputed Championship";

			MimeBodyPart mimeBodyPart = new MimeBodyPart();
			mimeBodyPart.setContent(msg, "text/html; charset=utf-8");

			MimeMultipart multipart = new MimeMultipart();
			multipart.addBodyPart(mimeBodyPart);
			
			MimeBodyPart attachmentBodyPart = new MimeBodyPart();
			attachmentBodyPart.setFileName(multipartFile.getOriginalFilename());
			attachmentBodyPart.setContent(multipartFile.getBytes(), multipartFile.getContentType());
			multipart.addBodyPart(attachmentBodyPart);
			message.setContent(multipart);

			Transport.send(message);
			System.out.println("SEND SUCCESSFULLY");
		} catch (MessagingException mex) {
			mex.printStackTrace();
		}

		return null;
	}
}
